{"version":3,"sources":["components/NavBar.js","services/api.js","components/Login.js","components/Register.js","components/CreateTask.js","components/EditTask.js","components/TaskList.js","components/HomePage.js","components/CreateTaskPage.js","App.js","index.js","styles/Common.module.css","styles/NavBar.module.css","App.module.css"],"names":["NavBar","_ref","isLoggedIn","onLogout","expanded","setExpanded","useState","location","useLocation","useEffect","pathname","handleNavClick","React","createElement","Fragment","Navbar","expand","fixed","onToggle","className","styles","Container","Brand","src","alt","height","Toggle","aria-controls","Collapse","id","Nav","navbarScroll","NavLink","to","onClick","Link","api","axios","create","baseURL","process","timeout","headers","interceptors","request","use","config","accessToken","localStorage","getItem","Authorization","error","Promise","reject","response","async","_error$response","originalRequest","status","_retry","refreshToken","newAccessToken","post","defaults","refresh","data","access","setItem","removeItem","window","href","refreshError","Login","onLogin","navigate","useNavigate","email","setEmail","password","setPassword","setError","clsx","container","Row","Col","xs","sm","md","lg","Card","Body","Title","Alert","variant","Form","onSubmit","e","preventDefault","err","_err$response","_err$response$data","message","Group","controlId","Label","Control","type","value","onChange","target","required","Button","Register","name","setName","confirmPassword","setConfirmPassword","length","confirm_password","CreateTask","onCancel","title","setTitle","description","setDescription","dueDate","setDueDate","Date","priority","setPriority","category","setCategory","setStatus","assignedUsers","setAssignedUsers","files","setFiles","users","setUsers","loading","setLoading","errorMessage","setErrorMessage","successMessage","setSuccessMessage","isSubmitting","setIsSubmitting","token","usersRes","get","fetchUsers","resetForm","Spinner","animation","style","width","maxWidth","taskData","setTimeout","_error$response$data","detail","placeholder","as","rows","DatePicker","selected","date","Select","multiple","Array","from","selectedOptions","map","opt","user","key","username","Text","file","idx","Math","round","size","disabled","handleCancel","EditTask","useParams","CATEGORY_CHOICES","submitting","setSubmitting","taskRes","all","task","due_date","assigned_users","u","String","fetchTaskAndUsers","formData","FormData","append","isNaN","format","forEach","userId","Number","put","state","htmlFor","dateFormat","cat","charAt","toUpperCase","slice","TaskList","_selectedTask$status","tasks","setTasks","selectedTask","setSelectedTask","searchText","setSearchText","filterOptions","setFilterOptions","sortOption","setSortOption","completingTaskId","setCompletingTaskId","deletingTaskId","setDeletingTaskId","showDeleteConfirm","setShowDeleteConfirm","taskToDelete","setTaskToDelete","tasksResponse","usersResponse","fetchData","getUserNameById","find","filteredAndSortedTasks","useMemo","filteredTasks","lowerCaseSearchText","toLowerCase","filter","_task$title","_task$description","_task$category","_task$assigned_users","includes","some","_task$category2","_task$status","sort","a","b","dateA","dateB","getTime","_a$priority","_b$priority","priorityOrder","high","medium","low","priorityA","closeTaskDetails","handleFilterChange","option","prev","markTaskComplete","patch","updatedTasks","t","prevSelected","handleDeleteClick","event","stopPropagation","cancelDelete","replace","split","word","join","handleSortChange","role","Table","striped","bordered","hover","responsive","_task$status2","handleTaskClick","cursor","toLocaleDateString","isArray","colSpan","backgroundColor","zIndex","upload_files","rel","pop","handleEditClick","taskId","Modal","show","onHide","Header","closeButton","Footer","delete","_err$response2","_err$response2$data","onClose","dismissible","HomePage","CreateTaskPage","debugData","setDebugData","padding","margin","border","JSON","stringify","_taskData$assignedUse","_taskData$files","toISOString","formDataObject","push","alert","App","setIsLoggedIn","handleLogout","Routes","Route","path","element","Navigate","handleLogin","handleTaskCancel","ReactDOM","createRoot","document","getElementById","render","StrictMode","BrowserRouter","future","v7_startTransition","module","exports"],"mappings":"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","file":"static/js/main.dddf3972.chunk.js","sourcesContent":["// export default NavBar;\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { NavLink, useLocation } from \"react-router-dom\";\r\nimport { Navbar, Container, Nav } from \"react-bootstrap\";\r\nimport styles from \"../styles/NavBar.module.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nfunction NavBar({ isLoggedIn, onLogout }) {\r\n  const [expanded, setExpanded] = useState(false); // manages collapse state\r\n  const location = useLocation();\r\n\r\n  useEffect(() => {\r\n    setExpanded(false); // close navbar on route change\r\n  }, [location.pathname]);\r\n\r\n  const handleNavClick = () => {\r\n    setExpanded(false); // close navbar on link click\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <Navbar\r\n          expand=\"md\"\r\n          fixed=\"top\"\r\n          expanded={expanded}\r\n          onToggle={setExpanded}\r\n          className={styles.NavBar}\r\n        >\r\n          <Container>\r\n            <Navbar.Brand className=\"me-auto\">\r\n              <img src=\"/logo192.png\" alt=\"logo\" height=\"45\" className=\"me-2\" />\r\n              <span className=\"fw-bold\">Productivity</span>\r\n            </Navbar.Brand>\r\n\r\n            <Navbar.Toggle aria-controls=\"navbarScroll\" />\r\n            <Navbar.Collapse id=\"navbarScroll\">\r\n              <Nav className=\"ms-auto my-2 my-lg-0\" navbarScroll>\r\n                {!isLoggedIn && (\r\n                  <NavLink\r\n                    to=\"/\"\r\n                    className={`${styles.NavLink} fw-bold`}\r\n                    onClick={handleNavClick}\r\n                  >\r\n                    <i className=\"fa-solid fa-house\"></i> Home Page\r\n                  </NavLink>\r\n                )}\r\n                {isLoggedIn && (\r\n                  <>\r\n                    <NavLink\r\n                      to=\"/CreateTask\"\r\n                      className={`${styles.NavLink} fw-bold`}\r\n                      onClick={handleNavClick}\r\n                    >\r\n                      <i className=\"fa-solid fa-square-plus\"></i> Create Task\r\n                    </NavLink>\r\n                    <NavLink\r\n                      to=\"/tasklist\"\r\n                      className={`${styles.NavLink} fw-bold`}\r\n                      onClick={handleNavClick}\r\n                    >\r\n                      <i className=\"fa-solid fa-list-check\"></i> Task List\r\n                    </NavLink>\r\n                    <Nav.Link\r\n                      onClick={onLogout}\r\n                      className={`${styles.NavLink} fw-bold`}\r\n                    >\r\n                      <i className=\"fa-solid fa-sign-out-alt\"></i> Logout\r\n                    </Nav.Link>\r\n                  </>\r\n                )}\r\n              </Nav>\r\n            </Navbar.Collapse>\r\n          </Container>\r\n        </Navbar>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default NavBar;\r\n","// src/services/api.js\r\nimport axios from \"axios\";\r\n\r\nconst isProduction = process.env.NODE_ENV === \"production\";\r\n\r\n// Use environment variables for backend URLs\r\nconst baseURL = isProduction\r\n  ? process.env.REACT_APP_BACKEND_URL_PROD\r\n  : process.env.REACT_APP_BACKEND_URL;\r\n\r\n// Create an Axios instance\r\nconst api = axios.create({\r\n  baseURL: baseURL,\r\n  timeout: 10000, // Increased timeout, 1 second might be too short\r\n  headers: { \"Content-Type\": \"application/json\" },\r\n});\r\n\r\n// Add a request interceptor to include the access token\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    // Get the access token from localStorage\r\n    const accessToken = localStorage.getItem(\"access_token\");\r\n\r\n    // If the token exists, add the Authorization header\r\n    if (accessToken) {\r\n      config.headers.Authorization = `Bearer ${accessToken}`;\r\n    }\r\n\r\n    return config;\r\n  },\r\n  (error) => {\r\n    // Do something with request error\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// This will automatically try to refresh the token if a 401 error occurs\r\n// and the token is potentially expired.\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  async (error) => {\r\n    const originalRequest = error.config;\r\n\r\n    // Check if the error is a 401 Unauthorized and not a retry attempt\r\n    if (error.response?.status === 401 && !originalRequest._retry) {\r\n      originalRequest._retry = true; // Mark this request as being retried\r\n\r\n      try {\r\n        // Attempt to get the refresh token from localStorage\r\n        const refreshToken = localStorage.getItem(\"refresh_token\");\r\n\r\n        if (refreshToken) {\r\n          // Make a request to your token refresh endpoint\r\n          const refreshResponse = await axios.post(\r\n            `${api.defaults.baseURL}/api/token/refresh/`,\r\n            {\r\n              refresh: refreshToken,\r\n            }\r\n          );\r\n\r\n          const newAccessToken = refreshResponse.data.access;\r\n\r\n          // Store the new access token in localStorage\r\n          localStorage.setItem(\"access_token\", newAccessToken);\r\n\r\n          // Update the Authorization header for the original failed request\r\n          originalRequest.headers.Authorization = `Bearer ${newAccessToken}`;\r\n\r\n          // Retry the original request with the new token\r\n          return api(originalRequest);\r\n        } else {\r\n          // No refresh token available, or refresh failed\r\n          // console.error(\"No refresh token available. Redirecting to login.\");\r\n          // Clear any potentially invalid tokens\r\n          localStorage.removeItem(\"access_token\");\r\n          localStorage.removeItem(\"refresh_token\");\r\n          // Redirect to the login page\r\n          window.location.href = \"/login\";\r\n        }\r\n      } catch (refreshError) {\r\n        // console.error(\"Failed to refresh token:\", refreshError);\r\n        // Clear tokens and redirect to login\r\n        localStorage.removeItem(\"access_token\");\r\n        localStorage.removeItem(\"refresh_token\");\r\n        // Redirect to the login page\r\n        window.location.href = \"/login\";\r\n      }\r\n    }\r\n\r\n    // For any other errors, just reject the promise\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default api;\r\n","// src/components/Login.js\r\nimport React, { useState } from \"react\";\r\nimport api from \"../services/api\";\r\nimport { useNavigate, Link } from \"react-router-dom\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Button,\r\n  Alert,\r\n  Card,\r\n} from \"react-bootstrap\";\r\nimport styles from \"../styles/Common.module.css\";\r\nimport clsx from \"clsx\";\r\n\r\nconst Login = ({ onLogin }) => {\r\n  // Accepting onLogin as a prop\r\n  const navigate = useNavigate();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const response = await api.post(\r\n        \"/api/login/\",\r\n        {\r\n          email,\r\n          password,\r\n        },\r\n        { timeout: 5000 }\r\n      );\r\n\r\n      localStorage.setItem(\"access_token\", response.data.access);\r\n      localStorage.setItem(\"refresh_token\", response.data.refresh);\r\n\r\n      onLogin();\r\n      navigate(\"/\"); // Redirect to home page after successful login\r\n    } catch (err) {\r\n      // console.error(\"Login error:\", err);\r\n      setError(err.response?.data?.message || \"Invalid email or password.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container\r\n      className={clsx(\r\n        styles.container,\r\n        \"d-flex\",\r\n        \"flex-column\",\r\n        \"justify-content-center\",\r\n        \"align-items-center\"\r\n      )}\r\n    >\r\n      <Row className=\"w-100\">\r\n        <Col xs={12} sm={10} md={8} lg={5} className=\"mx-auto \">\r\n          <Card className=\"shadow\">\r\n            <Card.Body>\r\n              <Card.Title className=\"text-center\">Login</Card.Title>\r\n              {error && <Alert variant=\"danger\">{error}</Alert>}\r\n              <Form onSubmit={handleSubmit}>\r\n                <Form.Group controlId=\"formEmail\">\r\n                  <Form.Label>Email</Form.Label>\r\n                  <Form.Control\r\n                    type=\"email\"\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                    required\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"formPassword\">\r\n                  <Form.Label>Password</Form.Label>\r\n                  <Form.Control\r\n                    type=\"password\"\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                    required\r\n                  />\r\n                </Form.Group>\r\n                <Button variant=\"primary\" type=\"submit\" className=\"w-100 mt-3\">\r\n                  Login\r\n                </Button>\r\n              </Form>\r\n              <div className=\"text-center mt-3\">\r\n                Don't have an account? <Link to=\"/register\">Register</Link>\r\n              </div>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","// Register.js\r\nimport React, { useState } from \"react\";\r\nimport api from \"../services/api\";\r\nimport { useNavigate, Link } from \"react-router-dom\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Button,\r\n  Alert,\r\n  Card,\r\n} from \"react-bootstrap\";\r\nimport styles from \"../styles/Common.module.css\";\r\nimport clsx from \"clsx\";\r\n\r\nconst Register = () => {\r\n  const navigate = useNavigate();\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // Check if the password length is less than 8 characters\r\n    if (password.length < 8) {\r\n      setError(\"Password must be at least 8 characters long.\");\r\n      return;\r\n    }\r\n\r\n    // Check if the passwords match\r\n    if (password !== confirmPassword) {\r\n      setError(\"Passwords do not match.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await api.post(\r\n        \"/api/register/\",\r\n        {\r\n          name,\r\n          email,\r\n          password,\r\n          confirm_password: confirmPassword,\r\n        },\r\n        { timeout: 5000 }\r\n      );\r\n\r\n      // Redirect the user to the login page after successful registration\r\n      navigate(\"/login\");\r\n    } catch (err) {\r\n      // console.error(\"Registration error:\", err);\r\n      setError(\r\n        err.response?.data?.message || \"An error occurred during registration.\"\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container\r\n      className={clsx(\r\n        styles.container,\r\n        \"d-flex\",\r\n        \"flex-column\",\r\n        \"justify-content-center\",\r\n        \"align-items-center\"\r\n      )}\r\n    >\r\n      <Row className=\"w-100\">\r\n        <Col xs={12} sm={10} md={8} lg={5} className=\"mx-auto \">\r\n          <Card className=\"shadow\">\r\n            <Card.Body>\r\n              <Card.Title className=\"text-center\">Register</Card.Title>\r\n              {error && <Alert variant=\"danger\">{error}</Alert>}\r\n              <Form onSubmit={handleSubmit}>\r\n                <Form.Group controlId=\"formName\">\r\n                  <Form.Label>Name</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    value={name}\r\n                    onChange={(e) => setName(e.target.value)}\r\n                    required\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"formEmail\">\r\n                  <Form.Label>Email</Form.Label>\r\n                  <Form.Control\r\n                    type=\"email\"\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                    required\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"formPassword\">\r\n                  <Form.Label>Password</Form.Label>\r\n                  <Form.Control\r\n                    type=\"password\"\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                    required\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"formConfirmPassword\">\r\n                  <Form.Label>Confirm Password</Form.Label>\r\n                  <Form.Control\r\n                    type=\"password\"\r\n                    value={confirmPassword}\r\n                    onChange={(e) => setConfirmPassword(e.target.value)}\r\n                    required\r\n                  />\r\n                </Form.Group>\r\n                <Button variant=\"primary\" type=\"submit\" className=\"w-100 mt-3\">\r\n                  Register\r\n                </Button>\r\n              </Form>\r\n              <div className=\"text-center mt-3\">\r\n                Already have an account? <Link to=\"/login\">Login</Link>\r\n              </div>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","// CreateTask.js\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { Container, Card, Form, Button, Alert, Spinner } from \"react-bootstrap\";\r\nimport styles from \"../styles/Common.module.css\";\r\nimport clsx from \"clsx\";\r\nimport api from \"../services/api\";\r\n\r\nconst CreateTask = ({ onSubmit, onCancel }) => {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [dueDate, setDueDate] = useState(new Date());\r\n  const [priority, setPriority] = useState(\"medium\");\r\n  const [category, setCategory] = useState(\"development\");\r\n  const [status, setStatus] = useState(\"pending\");\r\n  const [assignedUsers, setAssignedUsers] = useState([]);\r\n  const [files, setFiles] = useState([]);\r\n  const [users, setUsers] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [successMessage, setSuccessMessage] = useState(\"\");\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n  // Fetch users on mount\r\n  useEffect(() => {\r\n    const fetchUsers = async () => {\r\n      try {\r\n        const token = localStorage.getItem(\"access_token\");\r\n\r\n        const usersRes = await api.get(\"/api/users/\", {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n\r\n        setUsers(usersRes.data);\r\n      } catch (error) {\r\n        // console.error(error);\r\n        setErrorMessage(\"Failed to load users.\");\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  const handleAssignedUserChange = (e) => {\r\n    const selected = Array.from(e.target.selectedOptions).map(\r\n      (opt) => opt.value\r\n    );\r\n    setAssignedUsers(selected);\r\n  };\r\n\r\n  const handleFileChange = (e) => {\r\n    setFiles(Array.from(e.target.files));\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setTitle(\"\");\r\n    setDescription(\"\");\r\n    setDueDate(new Date());\r\n    setPriority(\"medium\");\r\n    setCategory(\"development\");\r\n    setStatus(\"pending\");\r\n    setAssignedUsers([]);\r\n    setFiles([]);\r\n    setSuccessMessage(\"\");\r\n    setErrorMessage(\"\");\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setErrorMessage(\"\");\r\n    setSuccessMessage(\"\");\r\n    setIsSubmitting(true);\r\n\r\n    const taskData = {\r\n      title,\r\n      description,\r\n      dueDate,\r\n      priority,\r\n      category,\r\n      status,\r\n      assignedUsers,\r\n      files,\r\n    };\r\n\r\n    try {\r\n      await onSubmit(taskData);\r\n      setSuccessMessage(\"Task created successfully!\");\r\n      setTimeout(() => {\r\n        resetForm();\r\n        setSuccessMessage(\"\");\r\n      }, 3000);\r\n    } catch (error) {\r\n      // console.error(\"Task creation failed:\", error);\r\n      setErrorMessage(\r\n        error?.response?.data?.detail ||\r\n          error?.message ||\r\n          \"Something went wrong while creating the task.\"\r\n      );\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    resetForm();\r\n    if (onCancel) onCancel();\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <Container className=\"text-center mt-5\">\r\n        <Spinner animation=\"border\" />\r\n        <p>Loading users...</p>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Container\r\n      className={clsx(\r\n        styles.container,\r\n        \"d-flex\",\r\n        \"flex-column\",\r\n        \"justify-content-center\",\r\n        \"align-items-center\",\r\n        \"mt-5\"\r\n      )}\r\n    >\r\n      <Card className=\"p-4 shadow\" style={{ width: \"100%\", maxWidth: \"600px\" }}>\r\n        <h3 className=\"text-center mb-4\">Create Task</h3>\r\n\r\n        {successMessage && (\r\n          <Alert variant=\"success\" className=\"mb-3\">\r\n            {successMessage}\r\n          </Alert>\r\n        )}\r\n        {errorMessage && (\r\n          <Alert variant=\"danger\" className=\"mb-3\">\r\n            {errorMessage}\r\n          </Alert>\r\n        )}\r\n\r\n        <Form onSubmit={handleSubmit}>\r\n          <Form.Group controlId=\"taskTitle\">\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Task Title\"\r\n              value={title}\r\n              onChange={(e) => setTitle(e.target.value)}\r\n              required\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"taskDescription\" className=\"mt-3\">\r\n            <Form.Control\r\n              as=\"textarea\"\r\n              placeholder=\"Task Description\"\r\n              value={description}\r\n              onChange={(e) => setDescription(e.target.value)}\r\n              rows={3}\r\n              required\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"dueDate\" className=\"mt-3\">\r\n            <Form.Label>Due Date</Form.Label>\r\n            <DatePicker\r\n              selected={dueDate}\r\n              onChange={(date) => setDueDate(date)}\r\n              className=\"form-control\"\r\n              required\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"taskPriority\" className=\"mt-3\">\r\n            <Form.Label>Priority</Form.Label>\r\n            <Form.Select\r\n              value={priority}\r\n              onChange={(e) => setPriority(e.target.value)}\r\n            >\r\n              <option value=\"low\">Low</option>\r\n              <option value=\"medium\">Medium</option>\r\n              <option value=\"high\">High</option>\r\n            </Form.Select>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"taskCategory\" className=\"mt-3\">\r\n            <Form.Label>Category</Form.Label>\r\n            <Form.Select\r\n              value={category}\r\n              onChange={(e) => setCategory(e.target.value)}\r\n            >\r\n              <option value=\"development\">Development</option>\r\n              <option value=\"design\">Design</option>\r\n              <option value=\"testing\">Testing</option>\r\n              <option value=\"documentation\">Documentation</option>\r\n              <option value=\"other\">Other</option>\r\n            </Form.Select>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"taskStatus\" className=\"mt-3\">\r\n            <Form.Label>Status</Form.Label>\r\n            <Form.Select\r\n              value={status}\r\n              onChange={(e) => setStatus(e.target.value)}\r\n            >\r\n              <option value=\"pending\">To Do</option>\r\n              <option value=\"in_progress\">In Progress</option>\r\n              <option value=\"done\">Done</option>\r\n            </Form.Select>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"assignedUsers\" className=\"mt-3\">\r\n            <Form.Label>Assigned Users</Form.Label>\r\n            <Form.Select\r\n              multiple\r\n              value={assignedUsers}\r\n              onChange={handleAssignedUserChange}\r\n            >\r\n              {users.map((user) => (\r\n                <option key={user.id} value={user.id}>\r\n                  {user.username}\r\n                </option>\r\n              ))}\r\n            </Form.Select>\r\n            <Form.Text className=\"text-muted\">\r\n              Select users to assign to this task.\r\n            </Form.Text>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"taskFiles\" className=\"mt-3\">\r\n            <Form.Label>Upload Files</Form.Label>\r\n            <Form.Control type=\"file\" multiple onChange={handleFileChange} />\r\n            {files.length > 0 && (\r\n              <div className=\"mt-2\">\r\n                <p>Selected files:</p>\r\n                <ul>\r\n                  {files.map((file, idx) => (\r\n                    <li key={idx}>\r\n                      {file.name} ({Math.round(file.size / 1024)} KB)\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              </div>\r\n            )}\r\n          </Form.Group>\r\n\r\n          <div className=\"d-flex justify-content-between mt-4\">\r\n            <Button variant=\"primary\" type=\"submit\" disabled={isSubmitting}>\r\n              {isSubmitting ? \"Submitting...\" : \"Create Task\"}\r\n            </Button>\r\n            <Button\r\n              variant=\"outline-secondary\"\r\n              type=\"button\"\r\n              onClick={handleCancel}\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </div>\r\n        </Form>\r\n      </Card>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default CreateTask;\r\n","// src/components/EditTask.js\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { Container, Card, Form, Button, Alert, Spinner } from \"react-bootstrap\";\r\nimport styles from \"../styles/Common.module.css\";\r\nimport clsx from \"clsx\";\r\nimport api from \"../services/api\";\r\nimport { format } from \"date-fns\";\r\n\r\nconst EditTask = () => {\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n\r\n  const [title, setTitle] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [dueDate, setDueDate] = useState(new Date());\r\n  const [priority, setPriority] = useState(\"low\");\r\n\r\n  // Define the category choices\r\n  const CATEGORY_CHOICES = [\r\n    \"development\",\r\n    \"design\",\r\n    \"testing\",\r\n    \"documentation\",\r\n    \"other\",\r\n  ];\r\n  const [category, setCategory] = useState(CATEGORY_CHOICES[0]);\r\n\r\n  const [status, setStatus] = useState(\"pending\");\r\n  const [assignedUsers, setAssignedUsers] = useState([]);\r\n  const [files, setFiles] = useState([]);\r\n  const [users, setUsers] = useState([]);\r\n\r\n  const [loading, setLoading] = useState(true);\r\n  const [submitting, setSubmitting] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [successMessage, setSuccessMessage] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const fetchTaskAndUsers = async () => {\r\n      try {\r\n        const token = localStorage.getItem(\"access_token\");\r\n        const [taskRes, usersRes] = await Promise.all([\r\n          api.get(`/api/tasks/${id}/`, {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n            },\r\n          }),\r\n          api.get(`/api/users/`, {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n            },\r\n          }),\r\n        ]);\r\n\r\n        const task = taskRes.data;\r\n        setTitle(task.title);\r\n        setDescription(task.description);\r\n        setDueDate(task.due_date ? new Date(task.due_date) : new Date());\r\n        setPriority(task.priority);\r\n        // Set the category from the fetched task data\r\n        setCategory(task.category || CATEGORY_CHOICES[0]); // Use fetched category or default\r\n        setStatus(task.status);\r\n        setAssignedUsers(task.assigned_users.map((u) => String(u)));\r\n        setUsers(usersRes.data);\r\n      } catch (error) {\r\n        // console.error(\"Error fetching task or users:\", error);\r\n        setErrorMessage(\"Failed to load task or users.\");\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchTaskAndUsers();\r\n  }, [id]);\r\n\r\n  const handleAssignedUserChange = (e) => {\r\n    const selected = Array.from(e.target.selectedOptions).map(\r\n      (opt) => opt.value\r\n    );\r\n    setAssignedUsers(selected);\r\n  };\r\n\r\n  const handleFileChange = (e) => {\r\n    setFiles(Array.from(e.target.files));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setSubmitting(true);\r\n    setErrorMessage(\"\");\r\n    setSuccessMessage(\"\");\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"title\", title);\r\n    formData.append(\"description\", description);\r\n\r\n    if (dueDate instanceof Date && !isNaN(dueDate)) {\r\n      formData.append(\"due_date\", format(dueDate, \"yyyy-MM-dd\"));\r\n    } else {\r\n      // console.warn(\"Invalid due date, not appending to form data.\");\r\n    }\r\n\r\n    formData.append(\"priority\", priority);\r\n    formData.append(\"category\", category);\r\n    formData.append(\"status\", status);\r\n\r\n    assignedUsers.forEach((userId) => {\r\n      formData.append(\"assigned_users\", Number(userId));\r\n    });\r\n\r\n    files.forEach((file) => formData.append(\"upload_files\", file));\r\n\r\n    try {\r\n      const token = localStorage.getItem(\"access_token\");\r\n\r\n      await api.put(`/api/tasks/${id}/`, formData, {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n      setSuccessMessage(\"Task updated successfully!\");\r\n      navigate(\"/tasklist\", {\r\n        state: { message: \"Edit successful\", type: \"success\" },\r\n      });\r\n    } catch (error) {\r\n      // console.error(\"Error updating task:\", error);\r\n      if (error.response && error.response.data) {\r\n        // console.error(\"Backend validation errors:\", error.response.data);\r\n        setErrorMessage(\r\n          \"Failed to update the task. Please check the console for details.\"\r\n        );\r\n      } else {\r\n        setErrorMessage(\r\n          \"Failed to update the task. An unexpected error occurred.\"\r\n        );\r\n      }\r\n    } finally {\r\n      setSubmitting(false);\r\n    }\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    navigate(\"/tasklist\", {\r\n      state: { message: \"Edit cancelled\", type: \"info\" },\r\n    });\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <Container className=\"text-center mt-5\">\r\n        <Spinner animation=\"border\" />\r\n        <p>Loading task...</p>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Container\r\n      className={clsx(\r\n        styles.container,\r\n        \"d-flex\",\r\n        \"flex-column\",\r\n        \"justify-content-center\",\r\n        \"align-items-center\",\r\n        \"mt-5\"\r\n      )}\r\n    >\r\n      <Card className=\"p-4 shadow\" style={{ width: \"100%\", maxWidth: \"600px\" }}>\r\n        <h3 className=\"text-center mb-4\">Edit Task</h3>\r\n\r\n        {errorMessage && <Alert variant=\"danger\">{errorMessage}</Alert>}\r\n\r\n        <Form onSubmit={handleSubmit}>\r\n          <Form.Group>\r\n            <Form.Label htmlFor=\"title\">Task Title</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              id=\"title\"\r\n              name=\"title\"\r\n              placeholder=\"Task Title\"\r\n              value={title}\r\n              onChange={(e) => setTitle(e.target.value)}\r\n              required\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group className=\"mt-3\">\r\n            <Form.Label htmlFor=\"description\">Task Description</Form.Label>\r\n            <Form.Control\r\n              as=\"textarea\"\r\n              id=\"description\"\r\n              name=\"description\"\r\n              placeholder=\"Task Description\"\r\n              value={description}\r\n              onChange={(e) => setDescription(e.target.value)}\r\n              rows={3}\r\n              required\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group className=\"mt-3\">\r\n            <Form.Label htmlFor=\"dueDate\">Due Date</Form.Label>\r\n            <DatePicker\r\n              id=\"dueDate\"\r\n              name=\"dueDate\"\r\n              selected={dueDate}\r\n              onChange={(date) => setDueDate(date)}\r\n              className=\"form-control\"\r\n              required\r\n              dateFormat=\"yyyy-MM-dd\" // Specify date format\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group className=\"mt-3\">\r\n            <Form.Label htmlFor=\"priority\">Priority</Form.Label>\r\n            <Form.Select\r\n              id=\"priority\"\r\n              name=\"priority\"\r\n              value={priority}\r\n              onChange={(e) => setPriority(e.target.value)}\r\n            >\r\n              <option value=\"low\">Low</option>\r\n              <option value=\"medium\">Medium</option>\r\n              <option value=\"high\">High</option>\r\n            </Form.Select>\r\n          </Form.Group>\r\n\r\n          <Form.Group className=\"mt-3\">\r\n            <Form.Label htmlFor=\"category\">Category</Form.Label>\r\n            <Form.Select\r\n              id=\"category\"\r\n              name=\"category\"\r\n              value={category}\r\n              onChange={(e) => setCategory(e.target.value)}\r\n            >\r\n              {/* Map over the CATEGORY_CHOICES to create options */}\r\n              {CATEGORY_CHOICES.map((cat) => (\r\n                <option key={cat} value={cat}>\r\n                  {cat.charAt(0).toUpperCase() + cat.slice(1)}{\" \"}\r\n                  {/* Capitalize for display */}\r\n                </option>\r\n              ))}\r\n            </Form.Select>\r\n          </Form.Group>\r\n\r\n          <Form.Group className=\"mt-3\">\r\n            <Form.Label htmlFor=\"status\">Status</Form.Label>\r\n            <Form.Select\r\n              id=\"status\"\r\n              name=\"status\"\r\n              value={status}\r\n              onChange={(e) => setStatus(e.target.value)}\r\n            >\r\n              <option value=\"pending\">Pending</option>\r\n              <option value=\"in_progress\">In Progress</option>\r\n              <option value=\"done\">Done</option>\r\n            </Form.Select>\r\n          </Form.Group>\r\n\r\n          <Form.Group className=\"mt-3\">\r\n            <Form.Label htmlFor=\"assignedUsers\">Assigned Users</Form.Label>\r\n            <Form.Select\r\n              multiple\r\n              id=\"assignedUsers\"\r\n              name=\"assigned_users\"\r\n              value={assignedUsers}\r\n              onChange={handleAssignedUserChange}\r\n            >\r\n              {users.map((user) => (\r\n                <option key={user.id} value={String(user.id)}>\r\n                  {user.name || user.username}\r\n                </option>\r\n              ))}\r\n            </Form.Select>\r\n          </Form.Group>\r\n\r\n          <Form.Group className=\"mt-3\">\r\n            <Form.Label>Upload Files</Form.Label>\r\n            <Form.Control type=\"file\" multiple onChange={handleFileChange} />\r\n          </Form.Group>\r\n\r\n          <div className=\"d-flex justify-content-between mt-4\">\r\n            <Button variant=\"primary\" type=\"submit\" disabled={submitting}>\r\n              {submitting ? \"Saving...\" : \"Edit Task\"}\r\n            </Button>\r\n            <Button\r\n              variant=\"outline-secondary\"\r\n              type=\"button\"\r\n              onClick={handleCancel}\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </div>\r\n        </Form>\r\n      </Card>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default EditTask;\r\n","// TaskList.js\r\nimport React, { useState, useEffect, useMemo } from \"react\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Button,\r\n  Card,\r\n  Table,\r\n  Spinner,\r\n  Alert,\r\n  Modal, // Import Modal for confirmation\r\n} from \"react-bootstrap\";\r\nimport styles from \"../styles/Common.module.css\";\r\nimport clsx from \"clsx\";\r\n// Import useNavigate from react-router-dom\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport api from \"../services/api\"; // Assuming your api service handles auth headers\r\n\r\nconst TASKS_API_ENDPOINT = \"/api/tasks/\";\r\nconst USERS_API_ENDPOINT = \"/api/users/\"; // Endpoint to fetch user data\r\n\r\nconst TaskList = () => {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [users, setUsers] = useState([]); // State to store user data\r\n  const [selectedTask, setSelectedTask] = useState(null);\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const [filterOptions, setFilterOptions] = useState({\r\n    category: \"\",\r\n    status: \"\",\r\n  });\r\n  const [sortOption, setSortOption] = useState(\"dueDate\");\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n  const [completingTaskId, setCompletingTaskId] = useState(null);\r\n  const [deletingTaskId, setDeletingTaskId] = useState(null); // State for task being deleted\r\n  const [showDeleteConfirm, setShowDeleteConfirm] = useState(false); // State for delete confirmation modal\r\n  const [taskToDelete, setTaskToDelete] = useState(null); // State to hold the task to be deleted\r\n\r\n  // Initialize useNavigate hook\r\n  const navigate = useNavigate();\r\n\r\n  // Define the available categories\r\n  const availableCategories = [\r\n    \"development\",\r\n    \"design\",\r\n    \"testing\",\r\n    \"documentation\",\r\n    \"other\",\r\n  ];\r\n  const availableStatuses = [\"pending\", \"in_progress\", \"done\"];\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoading(true);\r\n      setError(\"\");\r\n      try {\r\n        // Fetch tasks\r\n        const tasksResponse = await api.get(TASKS_API_ENDPOINT);\r\n        setTasks(tasksResponse.data);\r\n        // Fetch users\r\n        const usersResponse = await api.get(USERS_API_ENDPOINT);\r\n        setUsers(usersResponse.data);\r\n      } catch (err) {\r\n        // console.error(\"Failed to load data:\", err);\r\n        setError(\r\n          err.response?.data?.detail || err.message || \"Unable to load data.\"\r\n        );\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  // Helper function to get user name by ID\r\n  const getUserNameById = (userId) => {\r\n    const user = users.find((user) => user.id === userId);\r\n    return user ? user.username : \"Unknown User\"; // Use username as the display name\r\n  };\r\n\r\n  const filteredAndSortedTasks = useMemo(() => {\r\n    let filteredTasks = tasks;\r\n\r\n    if (searchText) {\r\n      const lowerCaseSearchText = searchText.toLowerCase();\r\n      filteredTasks = filteredTasks.filter(\r\n        (task) =>\r\n          task.title?.toLowerCase().includes(lowerCaseSearchText) || // Added null check\r\n          task.description?.toLowerCase().includes(lowerCaseSearchText) || // Added null check\r\n          task.category?.toLowerCase().includes(lowerCaseSearchText) || // Added null check\r\n          task.assigned_users?.some((userId) => {\r\n            const userName = getUserNameById(userId);\r\n            return userName.toLowerCase().includes(lowerCaseSearchText);\r\n          })\r\n      );\r\n    }\r\n\r\n    if (filterOptions.category) {\r\n      filteredTasks = filteredTasks.filter(\r\n        (task) =>\r\n          task.category?.toLowerCase() === filterOptions.category.toLowerCase() // Added null check\r\n      );\r\n    }\r\n\r\n    if (filterOptions.status) {\r\n      filteredTasks = filteredTasks.filter(\r\n        (task) =>\r\n          task.status?.toLowerCase() === filterOptions.status.toLowerCase() // Added null check\r\n      );\r\n    }\r\n\r\n    const sortedTasks = [...filteredTasks].sort((a, b) => {\r\n      if (sortOption === \"dueDate\") {\r\n        const dateA = a.due_date ? new Date(a.due_date) : null;\r\n        const dateB = b.due_date ? new Date(b.due_date) : null;\r\n        if (dateA && dateB) return dateA.getTime() - dateB.getTime(); // Compare timestamps\r\n        if (dateA) return -1; // Tasks with due dates come first\r\n        if (dateB) return 1; // Tasks with due dates come first\r\n        return 0; // Both null or invalid dates\r\n      } else if (sortOption === \"priority\") {\r\n        const priorityOrder = { high: 3, medium: 2, low: 1 };\r\n        // Handle cases where priority might be missing or unexpected\r\n        const priorityA = priorityOrder[a.priority?.toLowerCase()] || 0; // Added null check\r\n        const priorityB = priorityOrder[b.priority?.toLowerCase()] || 0; // Added null check\r\n        return priorityB - priorityA; // High to Low\r\n      }\r\n      return 0;\r\n    });\r\n\r\n    return sortedTasks;\r\n  }, [tasks, users, searchText, filterOptions, sortOption]); // Added users to dependency array\r\n\r\n  const handleTaskClick = (task) => setSelectedTask(task);\r\n  const closeTaskDetails = () => setSelectedTask(null);\r\n  const handleSearch = (e) => setSearchText(e.target.value);\r\n  const handleFilterChange = (option, value) =>\r\n    setFilterOptions((prev) => ({ ...prev, [option]: value }));\r\n  const handleSortChange = (option) => setSortOption(option);\r\n\r\n  const markTaskComplete = async (task) => {\r\n    setCompletingTaskId(task.id);\r\n    try {\r\n      await api.patch(`/api/tasks/${task.id}/`, { status: \"done\" });\r\n      const updatedTasks = tasks.map((t) =>\r\n        t.id === task.id ? { ...t, status: \"done\" } : t\r\n      );\r\n      setTasks(updatedTasks);\r\n      // If the completed task is the selected task, update the selected task\r\n      if (selectedTask && selectedTask.id === task.id) {\r\n        setSelectedTask((prevSelected) => ({\r\n          ...prevSelected,\r\n          status: \"done\",\r\n        }));\r\n      }\r\n    } catch (err) {\r\n      // console.error(\"Failed to mark task complete:\", err);\r\n      setError(\"Failed to mark task complete. Please try again.\");\r\n    } finally {\r\n      setCompletingTaskId(null);\r\n    }\r\n  };\r\n\r\n  // Function to initiate the delete process (show confirmation modal)\r\n  const handleDeleteClick = (task, event) => {\r\n    // Prevent the row click event from firing\r\n    event.stopPropagation();\r\n    setTaskToDelete(task);\r\n    setShowDeleteConfirm(true);\r\n  };\r\n\r\n  // Function to handle the actual deletion after confirmation\r\n  const confirmDelete = async () => {\r\n    if (!taskToDelete) return;\r\n\r\n    setDeletingTaskId(taskToDelete.id);\r\n    setShowDeleteConfirm(false); // Close the modal\r\n    setError(\"\"); // Clear previous errors\r\n\r\n    try {\r\n      await api.delete(`/api/tasks/${taskToDelete.id}/`);\r\n      // Remove the deleted task from the state\r\n      setTasks(tasks.filter((task) => task.id !== taskToDelete.id));\r\n      // If the deleted task was the selected one, close the details view\r\n      if (selectedTask && selectedTask.id === taskToDelete.id) {\r\n        setSelectedTask(null);\r\n      }\r\n    } catch (err) {\r\n      // console.error(\"Failed to delete task:\", err);\r\n      setError(\r\n        err.response?.data?.detail ||\r\n          err.message ||\r\n          \"Failed to delete task. Please try again.\"\r\n      );\r\n    } finally {\r\n      setDeletingTaskId(null);\r\n      setTaskToDelete(null); // Clear the task to delete state\r\n    }\r\n  };\r\n\r\n  // Function to close the delete confirmation modal\r\n  const cancelDelete = () => {\r\n    setShowDeleteConfirm(false);\r\n    setTaskToDelete(null);\r\n  };\r\n\r\n  // Function to handle the Edit button click in the modal\r\n  const handleEditClick = (taskId, event) => {\r\n    // Prevent the click event from propagating to the modal's background (which would close it)\r\n    event.stopPropagation();\r\n    // Close the task details modal\r\n    closeTaskDetails();\r\n    // Navigate to the edit task page\r\n    navigate(`/edittask/${taskId}`);\r\n  };\r\n\r\n  return (\r\n    <Container\r\n      className={clsx(\r\n        styles.container,\r\n        \"d-flex\",\r\n        \"flex-column\",\r\n        \"justify-content-center\",\r\n        \"align-items-center\",\r\n        \"mt-5\"\r\n      )}\r\n    >\r\n      <Card className=\"p-4 shadow w-100\" style={{ maxWidth: \"960px\" }}>\r\n        <h3 className=\"text-center mb-4\">Your Task List</h3>\r\n\r\n        <Form className=\"mb-4\">\r\n          <Row className=\"align-items-end g-3 justify-content-center\">\r\n            <Col md={4}>\r\n              <Form.Group controlId=\"searchTasks\">\r\n                <Form.Label>Search</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Search tasks...\"\r\n                  value={searchText}\r\n                  onChange={handleSearch}\r\n                />\r\n              </Form.Group>\r\n            </Col>\r\n            <Col md={4}>\r\n              <Form.Group controlId=\"categoryFilter\">\r\n                <Form.Label>Category</Form.Label>\r\n                <Form.Select\r\n                  value={filterOptions.category}\r\n                  onChange={(e) =>\r\n                    handleFilterChange(\"category\", e.target.value)\r\n                  }\r\n                >\r\n                  <option value=\"\">All Categories</option>\r\n                  {/* Map over availableCategories for filter options */}\r\n                  {availableCategories.map((category) => (\r\n                    <option key={category} value={category}>\r\n                      {category.charAt(0).toUpperCase() + category.slice(1)}\r\n                    </option>\r\n                  ))}\r\n                </Form.Select>\r\n              </Form.Group>\r\n            </Col>\r\n            <Col md={4}>\r\n              <Form.Group controlId=\"statusFilter\">\r\n                <Form.Label>Status</Form.Label>\r\n                <Form.Select\r\n                  value={filterOptions.status}\r\n                  onChange={(e) => handleFilterChange(\"status\", e.target.value)}\r\n                >\r\n                  <option value=\"\">All Statuses</option>\r\n                  {availableStatuses.map((status) => (\r\n                    <option key={status} value={status}>\r\n                      {status\r\n                        .replace(\"_\", \" \")\r\n                        .split(\" \")\r\n                        .map(\r\n                          (word) => word.charAt(0).toUpperCase() + word.slice(1)\r\n                        )\r\n                        .join(\" \")}\r\n                    </option>\r\n                  ))}\r\n                </Form.Select>\r\n              </Form.Group>\r\n            </Col>\r\n            <Col md={4}>\r\n              <Form.Group controlId=\"sortBy\">\r\n                <Form.Label>Sort By</Form.Label>\r\n                <Form.Select\r\n                  value={sortOption}\r\n                  onChange={(e) => handleSortChange(e.target.value)}\r\n                >\r\n                  <option value=\"dueDate\">Due Date</option>\r\n                  <option value=\"priority\">Priority</option>\r\n                </Form.Select>\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n\r\n        {loading ? (\r\n          <div className=\"text-center\">\r\n            <Spinner animation=\"border\" role=\"status\">\r\n              <span className=\"visually-hidden\">Loading Tasks...</span>\r\n            </Spinner>\r\n          </div>\r\n        ) : error ? (\r\n          <Alert variant=\"danger\">{error}</Alert>\r\n        ) : (\r\n          <Table striped bordered hover responsive className=\"text-center\">\r\n            <thead>\r\n              <tr>\r\n                <th>Title</th>\r\n                <th>Due Date</th>\r\n                <th>Priority</th>\r\n                <th>Category</th> {/* Added Category column */}\r\n                <th>Status</th>\r\n                <th>Assigned Users</th>\r\n                <th>Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {filteredAndSortedTasks.length > 0 ? (\r\n                filteredAndSortedTasks.map((task) => (\r\n                  <tr\r\n                    key={task.id}\r\n                    onClick={() => handleTaskClick(task)}\r\n                    style={{ cursor: \"pointer\" }}\r\n                  >\r\n                    <td>{task.title}</td>\r\n                    <td>\r\n                      {task.due_date\r\n                        ? new Date(task.due_date).toLocaleDateString()\r\n                        : \"No Due Date\"}\r\n                    </td>\r\n                    <td>{task.priority}</td>\r\n                    <td>{task.category}</td>\r\n                    <td>{task.status}</td>\r\n                    <td>\r\n                      {task.assigned_users && Array.isArray(task.assigned_users)\r\n                        ? task.assigned_users\r\n                            .map((userId) => getUserNameById(userId))\r\n                            .join(\", \")\r\n                        : \"Unassigned\"}\r\n                    </td>\r\n                    <td>\r\n                      {/* Edit Button (Table Row) */}\r\n                      <Link\r\n                        to={`/edittask/${task.id}`}\r\n                        onClick={(e) => e.stopPropagation()}\r\n                      >\r\n                        <Button\r\n                          variant=\"outline-primary\"\r\n                          size=\"sm\"\r\n                          className=\"me-2\"\r\n                        >\r\n                          Edit\r\n                        </Button>\r\n                      </Link>\r\n                      {/* Complete Button */}\r\n                      <Button\r\n                        variant=\"outline-success\"\r\n                        size=\"sm\"\r\n                        className=\"me-2\" // Added margin\r\n                        onClick={(e) => {\r\n                          e.stopPropagation();\r\n                          markTaskComplete(task);\r\n                        }}\r\n                        disabled={\r\n                          task.status?.toLowerCase() === \"done\" ||\r\n                          completingTaskId === task.id\r\n                        }\r\n                      >\r\n                        {completingTaskId === task.id ? (\r\n                          <Spinner size=\"sm\" animation=\"border\" />\r\n                        ) : (\r\n                          \"Complete\"\r\n                        )}\r\n                      </Button>\r\n                      {/* Delete Button */}\r\n                      <Button\r\n                        variant=\"outline-danger\"\r\n                        size=\"sm\"\r\n                        onClick={(e) => handleDeleteClick(task, e)} // Pass event to prevent row click\r\n                        disabled={deletingTaskId === task.id}\r\n                      >\r\n                        {deletingTaskId === task.id ? (\r\n                          <Spinner size=\"sm\" animation=\"border\" />\r\n                        ) : (\r\n                          \"Delete\"\r\n                        )}\r\n                      </Button>\r\n                    </td>\r\n                  </tr>\r\n                ))\r\n              ) : (\r\n                <tr>\r\n                  <td colSpan=\"7\" className=\"text-center\">\r\n                    {tasks.length > 0\r\n                      ? \"No tasks match your criteria.\"\r\n                      : \"No tasks available.\"}\r\n                  </td>\r\n                </tr>\r\n              )}\r\n            </tbody>\r\n          </Table>\r\n        )}\r\n      </Card>\r\n\r\n      {/* Task Details Modal (using Card for styling) */}\r\n      {selectedTask && (\r\n        <>\r\n          <div\r\n            className=\"position-fixed top-0 start-0 w-100 h-100\"\r\n            style={{ backgroundColor: \"rgba(0, 0, 0, 0.5)\", zIndex: 1040 }}\r\n            onClick={closeTaskDetails}\r\n          />\r\n          <Card\r\n            className=\"position-fixed top-50 start-50 translate-middle p-4 shadow\"\r\n            style={{ zIndex: 1050, width: \"90%\", maxWidth: \"500px\" }}\r\n          >\r\n            <h4>{selectedTask.title}</h4>\r\n            <p>\r\n              <strong>Description:</strong> {selectedTask.description}\r\n            </p>\r\n            <p>\r\n              <strong>Due:</strong>{\" \"}\r\n              {selectedTask.due_date\r\n                ? new Date(selectedTask.due_date).toLocaleDateString()\r\n                : \"No Due Date\"}\r\n            </p>\r\n            <p>\r\n              <strong>Category:</strong> {selectedTask.category}{\" \"}\r\n              {/* Display category */}\r\n            </p>\r\n            <p>\r\n              <strong>Priority:</strong> {selectedTask.priority}\r\n            </p>\r\n            <p>\r\n              <strong>Status:</strong> {selectedTask.status}\r\n            </p>\r\n            <p>\r\n              <strong>Assigned:</strong>{\" \"}\r\n              {selectedTask.assigned_users &&\r\n              Array.isArray(selectedTask.assigned_users)\r\n                ? selectedTask.assigned_users\r\n                    .map((userId) => getUserNameById(userId))\r\n                    .join(\", \")\r\n                : \"Unassigned\"}\r\n            </p>\r\n\r\n            {/* Display files if any */}\r\n            {selectedTask.upload_files &&\r\n              selectedTask.upload_files.length > 0 && (\r\n                <div className=\"mt-3\">\r\n                  <strong>Attached Files:</strong>\r\n                  <ul>\r\n                    {selectedTask.upload_files.map((file) => (\r\n                      <li key={file.id}>\r\n                        <a\r\n                          href={file.file}\r\n                          target=\"_blank\"\r\n                          rel=\"noopener noreferrer\"\r\n                        >\r\n                          {file.file.split(\"/\").pop()} {/* Display filename */}\r\n                        </a>\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n                </div>\r\n              )}\r\n\r\n            <div className=\"d-flex justify-content-between mt-3\">\r\n              <Button\r\n                variant=\"success\"\r\n                onClick={() => markTaskComplete(selectedTask)}\r\n                disabled={\r\n                  selectedTask.status?.toLowerCase() === \"done\" ||\r\n                  completingTaskId === selectedTask?.id\r\n                }\r\n              >\r\n                {completingTaskId === selectedTask?.id ? (\r\n                  <Spinner size=\"sm\" animation=\"border\" />\r\n                ) : (\r\n                  \"Complete\"\r\n                )}\r\n              </Button>\r\n              {/* Edit Button (Modal) - Use Button and handleEditClick */}\r\n              <Button\r\n                variant=\"warning\"\r\n                onClick={(e) => handleEditClick(selectedTask.id, e)}\r\n              >\r\n                Edit\r\n              </Button>\r\n              {/* Delete Button in Modal */}\r\n              <Button\r\n                variant=\"danger\"\r\n                onClick={(e) => handleDeleteClick(selectedTask, e)} // Use handleDeleteClick\r\n                disabled={deletingTaskId === selectedTask?.id}\r\n              >\r\n                {deletingTaskId === selectedTask?.id ? (\r\n                  <Spinner size=\"sm\" animation=\"border\" />\r\n                ) : (\r\n                  \"Delete\"\r\n                )}\r\n              </Button>\r\n              <Button variant=\"secondary\" onClick={closeTaskDetails}>\r\n                Close\r\n              </Button>\r\n            </div>\r\n          </Card>\r\n        </>\r\n      )}\r\n\r\n      {/* Delete Confirmation Modal */}\r\n      <Modal show={showDeleteConfirm} onHide={cancelDelete}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Confirm Deletion</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          Are you sure you want to delete the task \"{taskToDelete?.title}\"?\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={cancelDelete}>\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            variant=\"danger\"\r\n            onClick={confirmDelete}\r\n            disabled={deletingTaskId !== null}\r\n          >\r\n            {deletingTaskId === taskToDelete?.id ? (\r\n              <Spinner size=\"sm\" animation=\"border\" />\r\n            ) : (\r\n              \"Delete\"\r\n            )}\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n      {/* Error Alert */}\r\n      {error && (\r\n        <div\r\n          className=\"position-fixed bottom-0 end-0 p-3\"\r\n          style={{ zIndex: 1060 }}\r\n        >\r\n          <Alert variant=\"danger\" onClose={() => setError(\"\")} dismissible>\r\n            {error}\r\n          </Alert>\r\n        </div>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default TaskList;\r\n","// HomePage.js\r\nimport React from \"react\";\r\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styles from \"../styles/Common.module.css\";\r\nimport clsx from \"clsx\";\r\n\r\nconst HomePage = () => {\r\n  return (\r\n    <Container\r\n      className={clsx(\r\n        styles.container,\r\n        \"d-flex\",\r\n        \"flex-column\",\r\n        \"justify-content-center\",\r\n        \"align-items-center\"\r\n      )}\r\n    >\r\n      <Row className=\"justify-content-center mb-5\">\r\n        <Col md={10} lg={8}>\r\n          <h1 className=\"display-4 fw-bold text-primary styles.responsiveTitle\">\r\n            Stay Productive, Stay Ahead\r\n          </h1>\r\n          <p className=\"lead mt-3 fs-4 styles.responsiveSubtitle\">\r\n            Organize your life and collaborate better with our calendar-driven\r\n            productivity app. Plan your tasks, track habits, and achieve more\r\n            together.\r\n          </p>\r\n          <div className=\"d-flex justify-content-center gap-3 mt-3\">\r\n            <Link to=\"/register\">\r\n              <Button variant=\"outline-primary\" size=\"lg\">\r\n                Get Started\r\n              </Button>\r\n            </Link>\r\n            <Link to=\"/login\">\r\n              <Button variant=\"outline-success\" size=\"lg\">\r\n                Login\r\n              </Button>\r\n            </Link>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","// CreateTaskPage.js\r\nimport React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport CreateTask from \"./CreateTask\";\r\n\r\nconst CreateTaskPage = () => {\r\n  const [debugData, setDebugData] = useState(null);\r\n\r\n  const handleCreateTask = async (taskData) => {\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append(\"title\", taskData.title);\r\n      formData.append(\"description\", taskData.description);\r\n      formData.append(\"due_date\", taskData.dueDate.toISOString().split(\"T\")[0]);\r\n      formData.append(\"priority\", taskData.priority);\r\n      formData.append(\"category\", taskData.category);\r\n      formData.append(\"status\", taskData.status.toLowerCase());\r\n\r\n      if (taskData.assignedUsers?.length > 0) {\r\n        taskData.assignedUsers.forEach((userId) => {\r\n          formData.append(\"assigned_users\", userId);\r\n        });\r\n      }\r\n\r\n      if (taskData.files?.length > 0) {\r\n        taskData.files.forEach((file) => formData.append(\"upload_files\", file));\r\n      }\r\n\r\n      const token = localStorage.getItem(\"access_token\");\r\n\r\n      // Convert FormData to object for debugging\r\n      const formDataObject = {};\r\n      formData.forEach((value, key) => {\r\n        if (formDataObject[key]) {\r\n          if (!Array.isArray(formDataObject[key])) {\r\n            formDataObject[key] = [formDataObject[key]];\r\n          }\r\n          formDataObject[key].push(value);\r\n        } else {\r\n          formDataObject[key] = value;\r\n        }\r\n      });\r\n\r\n      setDebugData({\r\n        taskData,\r\n        formData: formDataObject,\r\n      });\r\n\r\n      const response = await axios.post(\r\n        \"http://localhost:8000/api/tasks/\",\r\n        formData,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n            // 'Content-Type' is automatically set by Axios when using FormData\r\n          },\r\n        }\r\n      );\r\n\r\n      return response.data;\r\n    } catch (err) {\r\n      if (err.response) {\r\n        // console.error(\"Server validation errors:\", err.response.data);\r\n        alert(\"Task creation failed: \" + JSON.stringify(err.response.data));\r\n      } else {\r\n        // console.error(\"Network or unknown error:\", err.message);\r\n        alert(\"Network error: \" + err.message);\r\n      }\r\n      throw err;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {debugData && (\r\n        <div\r\n          style={{\r\n            backgroundColor: \"#f0f0f0\",\r\n            padding: \"20px\",\r\n            margin: \"20px\",\r\n            border: \"1px solid #ccc\",\r\n          }}\r\n        >\r\n          <h3 style={{ margin: \"0 0 10px 0\" }}>Debug Data:</h3>\r\n          <pre>{JSON.stringify(debugData, null, 2)}</pre>\r\n        </div>\r\n      )}\r\n      <CreateTask onSubmit={handleCreateTask} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CreateTaskPage;\r\n","// App.js\r\nimport React, { useState } from \"react\";\r\nimport NavBar from \"./components/NavBar\";\r\nimport styles from \"./App.module.css\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Routes, Route, Navigate } from \"react-router-dom\";\r\nimport Login from \"./components/Login\";\r\nimport Register from \"./components/Register\";\r\nimport CreateTask from \"./components/CreateTask\"; // CreateTaskPage uses it internally\r\nimport EditTask from \"./components/EditTask\";\r\nimport TaskList from \"./components/TaskList\";\r\nimport HomePage from \"./components/HomePage\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport CreateTaskPage from \"./components/CreateTaskPage\"; // a wrapper/page component\r\n\r\nfunction App() {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const handleLogin = () => {\r\n    setIsLoggedIn(true);\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    setIsLoggedIn(false);\r\n    // Redirect to home page\r\n  };\r\n\r\n  // (EditTask handles submission internally)\r\n  const handleTaskSubmit = (taskData) => {\r\n    // CreateTaskPage, EditTask uses its own submit\r\n  };\r\n\r\n  const handleTaskCancel = () => {\r\n    // CreateTaskPage\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <NavBar isLoggedIn={isLoggedIn} onLogout={handleLogout} />\r\n      <Container className={styles.container}>\r\n        <Routes>\r\n          {/* Redirect root to /createtask if logged in, else show HomePage or login page */}\r\n          <Route\r\n            path=\"/\"\r\n            element={isLoggedIn ? <Navigate to=\"/createtask\" /> : <HomePage />}\r\n          />\r\n\r\n          <Route\r\n            path=\"/login\"\r\n            element={\r\n              isLoggedIn ? (\r\n                <Navigate to=\"/createtask\" />\r\n              ) : (\r\n                <Login onLogin={handleLogin} />\r\n              )\r\n            }\r\n          />\r\n\r\n          <Route path=\"/register\" element={<Register />} />\r\n\r\n          {/* Route for creating tasks */}\r\n          <Route\r\n            path=\"/createtask\"\r\n            element={\r\n              isLoggedIn ? (\r\n                // handles the onSubmit/onCancel props\r\n                <CreateTaskPage\r\n                  users={[]} // Pass necessary props when CreateTaskPage needs them\r\n                  onSubmit={handleTaskSubmit}\r\n                  onCancel={handleTaskCancel}\r\n                />\r\n              ) : (\r\n                <Navigate to=\"/login\" />\r\n              )\r\n            }\r\n          />\r\n\r\n          {/* Use a URL parameter :id to capture the task ID */}\r\n          <Route\r\n            path=\"/edittask/:id\" // <-- ADDED :id parameter\r\n            element={\r\n              isLoggedIn ? (\r\n                // EditTask component fetches data based on the ID from the URL\r\n                <EditTask\r\n                // onSubmit={handleTaskSubmit}\r\n                // onCancel={handleTaskCancel}\r\n                />\r\n              ) : (\r\n                <Navigate to=\"/login\" />\r\n              )\r\n            }\r\n          />\r\n\r\n          {/* Route for listing tasks */}\r\n          <Route\r\n            path=\"/tasklist\"\r\n            element={isLoggedIn ? <TaskList /> : <Navigate to=\"/login\" />}\r\n          />\r\n        </Routes>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// index.js;\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom/client\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.createRoot(document.getElementById(\"root\")).render(\r\n  <React.StrictMode>\r\n    <BrowserRouter future={{ v7_startTransition: true }}>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Common_container__1k6nZ\",\"responsiveTitle\":\"Common_responsiveTitle__2IxBN\",\"responsiveSubtitle\":\"Common_responsiveSubtitle__2vazn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavBar\":\"NavBar_NavBar__2iEPv\",\"NavLink\":\"NavBar_NavLink__2Jd5H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1au9W\",\"Main\":\"App_Main__13Z4N\"};"],"sourceRoot":""}